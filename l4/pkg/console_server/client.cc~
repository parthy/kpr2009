/*
 * (c) 2008-2009 Technische Universit√§t Dresden
 * This file is part of TUD:OS and distributed under the terms of the
 * GNU General Public License 2.
 * Please see the COPYING-GPL-2 file for details.
 */
#include <l4/sys/err.h>
#include <l4/sys/types.h>
#include <l4/re/env>
#include <l4/re/namespace>
#include <l4/re/util/cap_alloc>
#include <l4/cxx/ipc_stream>

#include <stdio.h>

#include "shared.h"

class Hello {
private:
	l4_uint32_t prefix;
public:	
	Hello() {this->prefix=0;}
	Hello(int p) {
		this->prefix = p;
	}
	void show(char const * str);
};

void
Hello::show(char const * str)
{
  L4::Cap<void> server = L4Re::Util::cap_alloc.alloc<void>();
  if (!server.is_valid())
    {
      printf("Could not get capability slot!\n");
      return;
    }

  if (L4Re::Env::env()->names()->query("hello_server", server))
    {
      printf("Could not find my server!\n");
      return;
    }

  L4::Ipc_iostream s(l4_utcb());
  s << l4_umword_t(Opcode::func_show) << this->prefix << str;
  l4_msgtag_t res = s.call(server.cap(), Protocol::Hello);
}

int
main(int argc, char * argv[])
{
  Hello h((l4_uint32_t) argv[1]);
  h.show("Hello world!!");
  
  //printf("Here I am! And got %d arguments: %s\n", argc, argv[1]); 

  return 0;
}
